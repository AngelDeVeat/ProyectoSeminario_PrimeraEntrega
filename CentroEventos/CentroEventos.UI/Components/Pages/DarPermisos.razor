@page "/DarPermisos/{toModify:Usuario?}" 
@rendermode InteractiveServer
@inject NavigationManager navigator;
@inject UserState userState;
@inject DarPermisosUseCase darPermisosUseCase;

@*SI el usuario llego hasta aqui sin pasar por inicio_sesion/registro*@
<Mensaje @ref=dialogo 
mensaje="Acceso no autorizado" 
soloMensaje=true
OnCerrado="VolverMain"/>

<h3>Seleccione los permisos que quiere agregar</h3>

<ul>
    @foreach (var item in user.Permisos)
    {
        <li>
            <input type="checkbox"
                   checked="@permisos.Contains(item)"
                   @onchange="(e) => CambiarSeleccion(item, ((ChangeEventArgs)e).Value)" />
            @item
        </li>
    }
</ul>

<button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>

<h3>Volver a la pagina de inicio</h3>
<button class="btn btn-secondary" @onclick="IrInicio">Aceptar</button>

@*Opcion 1*@
<Mensaje @ref=dialogo 
mensaje="No se ha podido modificar el usuario debido a un problema con la informacion nueva" 
soloMensaje=true/>
@*Opcion 2*@
<Mensaje @ref=dialogo_2 
mensaje="El usuario se ha modificado correctamente" 
soloMensaje=true
OnCerrado="IrInicio"/> 

@code {
    List<Permiso> permisos = new List<Permiso>();
    Usuario user {get;set;} = null!;
    [Parameter] public Usuario? toModify {get;set;} = null!;
    [Parameter] public int? ID {get;set;} = null!;
    Mensaje dialogo = null!, dialogo_2 = null!, dialogo_noAutorizado = null!;
    bool mostrarDialogo = false;  

    void VolverMain(){
        navigator.NavigateTo("");
    }
    protected override void OnInitialized(){
        user = userState.user!;
        if (user == null){
            mostrarDialogo = true;
        }
    }
    protected override Task OnAfterRenderAsync(bool firstRender){
        if (mostrarDialogo && dialogo != null && firstRender){
            dialogo_noAutorizado.Mostrar();
            mostrarDialogo = false;
            StateHasChanged();
        }
        return Task.CompletedTask;
    }
    
    private void IrInicio(){
        navigator.NavigateTo("inicio");
    }
    private void CambiarSeleccion(Permiso item, object? valor)
{
    bool isChecked = valor is bool b && b; // Convierte el valor recibido a bool
    if (isChecked)
    {
        if (!permisos.Contains(item))
            permisos.Add(item); // Si está marcado y no estaba, lo agrega
    }
    else
    {
        permisos.Remove(item); // Si está desmarcado, lo quita
    }
}
    private void Aceptar(){
        darPermisosUseCase.Ejecutar(user, toModify!, permisos);
    }
}

