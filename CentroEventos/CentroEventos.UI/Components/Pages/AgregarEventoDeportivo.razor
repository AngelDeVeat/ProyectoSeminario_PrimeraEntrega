@page "/EventoDeportivo/{id:int?}"
@rendermode InteractiveServer
@inject NavigationManager Navegador;
@inject EventoDeportivoAltaUseCase EventoDeportivoAltaUseCase 
@inject EventoDeportivoModificacionUseCase EventoDeportivoModificacionUseCase
@inject ObtenerEventoDeportivoUseCase ObtenerEventoDeportivoUseCase
@inject ObtenerPersonaUseCase ObtenerPersonaUseCase
@inject UserState User
@*SI el usuario llego hasta aqui sin pasar por inicio_sesion/registro*@
<Mensaje @ref=dialogo 
mensaje="Acceso no autorizado" 
soloMensaje=true
OnCerrado="VolverHome"/>

<DialogoEx @ref="dialogoex"/>
@if (!mostrarDialogo){
@if (_esnuevoevento)
 {
<h3>Agregando un nuevo Evento</h3>
 }
 else
{
<h3> Modificando al Evento "@_evento.Nombre"</h3>
 }
<input placeholder="Nombre" @bind="_evento.Nombre" class="form-control">
<input placeholder="Descripcion" @bind="_evento.Descripcion" class="form-control">
<input placeholder="Fecha Inicio" @bind="_evento.FechaHoraInicio" class="form-control">
<input placeholder="Duracion" @bind="_evento.DuracionHoras" class="form-control">
<input placeholder="Cupo maximo" @bind="_evento.CupoMaximo" class="form-control">
<input placeholder="ID Persona Responsable " @bind="_evento.ResponsableID" class="form-control">
<button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>
<button class="btn btn-danger" @onclick="()=>VolverInicio()">
            Volver al inicio
        </button>

  }
@code {
EventoDeportivo _evento = new EventoDeportivo();

bool _esnuevoevento=true;
DialogoEx? dialogoex; 
Mensaje? dialogo=null;
[Parameter] public int? id{get; set;}
Usuario? user{get;set;}=null;
bool mostrarDialogo=false;
protected override void OnInitialized(){
  user=User.user;
  if (user ==null){
    mostrarDialogo=true;
  }
}
protected override void OnParametersSet()
{
if (id != null)
{
  var evento = ObtenerEventoDeportivoUseCase.Ejecutar(id.Value);
  if (evento != null){
      _evento=evento;
      _esnuevoevento=false;
   }
}
}
private void VolverInicio(){
     Navegador.NavigateTo($"inicio");
}
private void VolverHome(){
     Navegador.NavigateTo($"");
}
void Aceptar()
{try{
if (user!=null){
    if (_esnuevoevento)
      EventoDeportivoAltaUseCase.Alta(_evento, user);
   else
     EventoDeportivoModificacionUseCase.Modificacion(_evento,user);
   }
_evento = new EventoDeportivo();
Navegador.NavigateTo("listadoEventosDeportivos");}
catch(Exception e){
  dialogoex?.Mostrar(e.Message);
}
}
 protected override Task OnAfterRenderAsync(bool firstRender){
        if (mostrarDialogo && dialogo != null && firstRender){
            dialogo.Mostrar();
            mostrarDialogo = false;
            StateHasChanged();
        }
        return Task.CompletedTask;
    } 
}