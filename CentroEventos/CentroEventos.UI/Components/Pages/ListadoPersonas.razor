@using CentroEventos.UI.Components
@page "/listadoPersonas/{user:Usuario?}"
@rendermode InteractiveServer
using System.Runtime.InteropServices.Marshalling;

using System.Runtime.InteropServices.Marshalling;

@inject PersonaListadoUseCase PersonaListadoUseCase
@inject PersonaBajaUseCase PersonaBajaUseCase
@inject PersonaModificacionUseCase PersonaModificacionUseCase
@inject NavigationManager Navegador

<DialogosDeConfirmacion @ref="dialogo" OnConfirmado="Eliminar"/>
    <table class="table">
    <thead>
    <tr>
        <th>ID</th>
        <th>DNI</th>
        <th>NOMBRE</th>
        <th>APELLIDO</th>
        <th>EMAIL</th>
        <th>TELEFONO</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var per in _lista)
    {
    <tr>
        <td>@per.ID</td>
        <td>@per.DNI</td>
        <td>@per.Nombre</td>
        <td>@per.Apellido</td>
        <td>@per.Email</td>
        <td>@per.Telefono</td>
        <td>
            <button class="btn btn-primary" @onclick="()=>Modificacion(per)">
                Editar
            </button>
            <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(per)">
                Eliminar
            </button>
        </td>
    </tr>
    }
    </tbody>
    </table>
@code {
List<Persona> _lista = new List<Persona>();
 [Parameter]public Usuario? user {get; set;}
protected override void OnInitialized()
{
_lista = PersonaListadoUseCase.Listado();
}
DialogosDeConfirmacion dialogo=new DialogosDeConfirmacion() ;
Persona? _persona = null;
private void ConfirmarEliminacion(Persona per)
{
_persona = per;
dialogo.Mostrar($"Â¿Desea eliminar a la Persona {per.Nombre} {per.Apellido} {per.ID} {per.DNI}?");
}
private void Modificacion(Persona per){
    Navegador.NavigateTo($"Persona/{per.ID}");
}
private void Eliminar()
{
if (_persona != null && user!=null )
{
PersonaBajaUseCase.Baja(_persona.ID, user);
_lista = PersonaListadoUseCase.Listado(); //se actualiza la lista de clientes
}
}
}    using SQLitePCL;

#nullable disable
#line default
